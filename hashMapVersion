class Saying{
  hawaiian:string;
  english: string;
  hExplanation: string;
  eExplanation: string;

  constructor(hawaiian:string, english:string, hExplanation: string, eExplanation: string){
    this.hawaiian = hawaiian;
    this.english = english;
    this.eExplanation = eExplanation;
    this.hExplanation = hExplanation;
  }

  toString(){
    return ""; //to do 
  }
}

class HawaiianDictionary{
  dictionary: Map<string, Saying>;
  hWordIndex: Map<string, Saying[]>;
  eWordIndex: Map<string, Saying[]>;

  constructor(){
    this.dictionary = new Map();
    this.hWordIndex = new Map();
    this.eWordIndex = new Map();
  }

  //index the words for the 2 searches 
  indexWords(saying: Saying){
    //index hawaiian words
    const hawaiianWords = saying.hawaiian.split(/\s+/); //splits saying into words
    hawaiianWords.forEach(Element => {
      if(!this.hWordIndex.has(Element)){ //if word doesn't exist in the map
        this.hWordIndex.set(Element, []);
      }
      this.hWordIndex.get(Element)?.push(saying);
    });

    //index english words
    const englishWords = saying.english.split(/\s+/); //splits saying into words
    englishWords.forEach(Element => {
      if(!this.eWordIndex.has(Element)){ //if word doesn't exist in the map
        this.eWordIndex.set(Element, []);
      }
      this.eWordIndex.get(Element)?.push(saying);
    });
  }

  //insert new saying
  insertSaying(saying:Saying){
    this.dictionary.set(saying.hawaiian, saying);
    this.indexWords(saying);
  }

  //get first saying 
  first():Saying | undefined{
    return Array.from(this.dictionary.values())[0]; //converts value into array and returns first saying in that array
  }

  //get last saying
  last(): Saying | undefined{
    return Array.from(this.dictionary.values())[this.dictionary.size - 1]; //converts value into array & returns last saying in that array
  }

  //get saying before current saying?

  //get saying after current saying?

  //search sayings by Hawaiian word
  meHua(word:string){
    return this.hWordIndex.get(word) || [];
  }

  //search sayings by English word
  withWord(word:string){
    return this.eWordIndex.get(word) || [];
  }

  //get a saying if it exactly matches hawaiian text
  exactPhrase(saying:string):String | undefined{
    return this.dictionary.get(saying);

  }
}
